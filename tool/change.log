0.0.4 Added operator `+(RangeList other) => RangeList` to `RangeList`
0.0.4 Added method `includes(RangeList other) => bool` to `RangeList`
0.0.4 Added method `intersection(RangeList other) => RangeList` to `RangeList`
0.0.4 Added method `subtract(RangeList other) => List<RangeList>` to `RangeList`
0.0.4 Added class `SparseList<E>`
0.0.4 Added class `GroupedRangeList<E>`
0.0.5 Improved (up to 15%) the performance of the `SparseList.addGroup()` when the group added to the end
0.0.6 Added class `SparseBoolList`
0.0.6 Modified method in `SparseList<E>` from `getGroups(RangeList range)` to `getGroups([RangeList range])`
0.0.7 Added field `end => int` to `SparseList<E>` 
0.0.7 Added field `start => int` to `SparseList<E>`
0.0.8 Added field `groups => List<GroupedRangeList<E>>` to `SparseList<E>`
0.0.9 Added method `getIndexes() => Iterable<int> ` to `SparseList<E>`
0.0.10 Removed limitations on the bounds of the range in `SparseList.removeValues()`
0.0.10 Improved performance of modifications `SparseList<E>`
0.0.11 Fixed bug in `SparseList.removeValues()`
0.0.12 Fixed bug (decrease length) in `SparseList.removeValues()`
0.0.14 Fixed bug (decrease length) in `SparseList.removeValues()`
0.0.14 Added method `trim() => void` to `SparseList<E>`
0.0.14 Improved performance of modifications `SparseList<E>`
0.0.15 Fixed bug (change length of fixed list) in `SparseList.removeValues()`
0.0.15 Fixed bug (change length of fixed list) in `SparseList.trim()`
0.0.16 Fixed bug (change length of fixed list) in `SparseList.addGroup()`
0.0.17 `SparseList<E>` now can be frozen
0.0.17 Added method `freeze() => void>` to `SparseList<E>`
0.0.17 Added field `frozen => bool>` to `SparseList<E>`
0.0.18 Fixed bug in `SparseList.getGroups()`